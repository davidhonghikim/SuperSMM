[build-system]
requires = ["setuptools>=64.0.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "supersmm"
version = "0.1.0"
description = "Advanced Sheet Music Recognition and Processing"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "Your Name", email = "your.email@example.com"},
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Multimedia :: Graphics",
]
dependencies = [
    "numpy>=1.21.0",
    "opencv-python>=4.5.0",
    "tensorflow>=2.8.0",
    "PyMuPDF>=1.18.0",
    "matplotlib>=3.4.0",
    "PyYAML>=5.4.0",
    "Pillow>=8.3.0",
    "psutil>=5.8.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.2.0",
    "pytest-cov>=2.12.0",
    "black>=21.5b2",
    "isort>=5.0.0",
    "flake8>=3.8.0",
    "mypy>=0.800",
    "pre-commit>=2.13.0",
    "sphinx>=4.0.0",
    "sphinx-rtd-theme>=0.5.2",
]

gui = [
    "PyQt5>=5.15.0",
    "seaborn>=0.11.0",
]

[project.scripts]
supersmm = "supersmm.cli:main"

[project.entry-points.console_scripts]
supersmm-gui = "supersmm.__main__:main"

[tool.setuptools]
package-dir = { "" = "src" }
packages = { find = { where = ["src"], include = ["supersmm*"] } }

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
pythonpath = ["src"]
addopts = "-v --cov=supersmm --cov-report=term-missing"

[tool.coverage.run]
source = ["supersmm"]
omit = [
    "*/tests/*",
    "*__init__.py"
]
